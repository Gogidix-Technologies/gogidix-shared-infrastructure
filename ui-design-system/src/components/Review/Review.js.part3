  // Create report button
  const reportButton = onReportClick ? `
    <button 
      class="report-button" 
      onclick="handleReport('${reviewId}')"
      style="
        background: none;
        border: none;
        padding: ${tokens.spacing.xs};
        cursor: pointer;
        font-size: ${tokens.typography.textStyles.bodySmall.fontSize};
        color: ${tokens.colors.neutral.gray[600]};
        
        &:hover {
          color: ${tokens.colors.semantic.danger.main};
          text-decoration: underline;
        }
      "
    >
      ${translations.report}
    </button>
  ` : '';
  
  // Build review HTML
  return `
    <div 
      id="${reviewId}" 
      class="review ${className}" 
      dir="${dir}"
      data-review-id="${id}"
      style="
        margin-bottom: ${tokens.spacing.lg};
        padding-bottom: ${tokens.spacing.lg};
        border-bottom: 1px solid ${tokens.colors.neutral.gray[200]};
      "
      ${Object.entries(otherProps).map(([key, value]) => `${key}="${value}"`).join(' ')}
    >
      <div class="review-header" style="
        display: flex;
        align-items: flex-start;
        margin-bottom: ${tokens.spacing.md};
      ">
        <div class="author-avatar" style="
          width: 48px;
          height: 48px;
          border-radius: 50%;
          background-color: ${tokens.colors.neutral.gray[200]};
          margin-${dir === 'rtl' ? 'left' : 'right'}: ${tokens.spacing.md};
          flex-shrink: 0;
          overflow: hidden;
        ">
          <img 
            src="${author.avatarUrl || ''}" 
            alt="${author.name || ''}"
            style="
              width: 100%;
              height: 100%;
              object-fit: cover;
              display: ${author.avatarUrl ? 'block' : 'none'};
            "
          />
        </div>
        
        <div style="flex-grow: 1;">
          <div style="margin-bottom: ${tokens.spacing.xs};">
            <span class="author-name" style="
              font-weight: ${tokens.typography.fontWeights.medium};
              font-size: ${tokens.typography.textStyles.bodyLarge.fontSize};
            ">
              ${author.name || ''}
            </span>
          </div>
          
          <div style="
            display: flex;
            flex-wrap: wrap;
            align-items: center;
            gap: ${tokens.spacing.sm} ${tokens.spacing.md};
          ">
            ${ratingComponent}
            <span class="review-date" style="
              color: ${tokens.colors.neutral.gray[600]};
              font-size: ${tokens.typography.textStyles.bodySmall.fontSize};
            ">
              ${formattedTime}
            </span>
            ${verifiedBadge}
          </div>
        </div>
      </div>
      
      ${title ? `
        <h3 class="review-title" style="
          margin-top: 0;
          margin-bottom: ${tokens.spacing.sm};
          font-size: ${tokens.typography.textStyles.heading4.fontSize};
          font-weight: ${tokens.typography.fontWeights.semiBold};
        ">
          ${title}
        </h3>
      ` : ''}
      
      <div class="review-content" style="
        margin-bottom: ${tokens.spacing.md};
        line-height: ${tokens.typography.lineHeights.relaxed};
      ">
        ${content}
      </div>
      
      ${imagesHtml}
      
      <div class="review-actions" style="
        display: flex;
        align-items: center;
        justify-content: space-between;
        flex-wrap: wrap;
        gap: ${tokens.spacing.sm};
      ">
        <div>
          ${helpfulButton}
        </div>
        <div>
          ${reportButton}
        </div>
      </div>
    </div>
  `;
}

/**
 * Get translations based on locale
 */
function getTranslations(locale) {
  const translations = {
    en: {
      verifiedPurchase: 'Verified Purchase',
      helpful: 'Helpful',
      report: 'Report',
      reviewImage: 'Review Image'
    },
    ar: {
      verifiedPurchase: 'شراء موثق',
      helpful: 'مفيد',
      report: 'إبلاغ',
      reviewImage: 'صورة المراجعة'
    },
    fr: {
      verifiedPurchase: 'Achat Vérifié',
      helpful: 'Utile',
      report: 'Signaler',
      reviewImage: 'Image d\'avis'
    },
    // Add more locales as needed
  };
  
  return translations[locale] || translations['en'];
}

module.exports = Review;
