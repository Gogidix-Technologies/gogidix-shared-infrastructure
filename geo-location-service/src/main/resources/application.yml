spring:
  application:
    name: geo-location-service
  datasource:
    url: ${DATASOURCE_URL:jdbc:postgresql://localhost:5432/geo_location_db}
    username: ${DATASOURCE_USERNAME:postgres}
    password: ${DATASOURCE_PASSWORD:postgres}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    show-sql: false
  flyway:
    enabled: true
    baseline-on-migrate: true
    locations: classpath:db/migration
  cloud:
    config:
      enabled: false

server:
  port: ${SERVER_PORT:8085}
  error:
    include-message: always
    include-binding-errors: always

eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_URI:http://localhost:8761/eureka}
    register-with-eureka: true
    fetch-registry: true
  instance:
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${server.port}

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: when_authorized
  info:
    env:
      enabled: true
    java:
      enabled: true

springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    operationsSorter: method

geo-location:
  provider:
    type: ${GEO_PROVIDER_TYPE:local}
    google:
      api-key: ${GOOGLE_MAPS_API_KEY:}
    openstreetmap:
      url: ${OSM_API_URL:https://nominatim.openstreetmap.org}
      email: ${OSM_CONTACT_EMAIL:contact@example.com}
